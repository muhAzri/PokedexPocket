name: Release Pipeline

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

env:
  SCHEME: PokedexPocket
  CONFIGURATION: Release

jobs:
  create-release:
    name: Create Release
    runs-on: macos-latest
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Get version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Generate changelog
      id: changelog
      run: |
        if git tag --list | grep -q "v"; then
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            git log $LAST_TAG..HEAD --pretty=format:"- %s (%an)" --no-merges >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
          fi
        else
          echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: PokedexPocket ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## What's Changed
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          Download the IPA file from the assets below and install using Xcode or TestFlight.
          
          ## Requirements
          - iOS 15.0 or later
          - iPhone/iPad compatible
        draft: false
        prerelease: false

  build-and-upload:
    name: Build and Upload IPA
    runs-on: macos-latest
    needs: create-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache Swift Package Manager dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData/*/SourcePackages
          .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Install dependencies
      run: |
        if ! which xcpretty >/dev/null; then
          gem install xcpretty
        fi
        
    - name: Clean DerivedData
      run: |
        rm -rf ~/Library/Developer/Xcode/DerivedData
        
    - name: Resolve Package Dependencies
      run: |
        xcodebuild -resolvePackageDependencies -scheme $SCHEME
        
    - name: Run Full Test Suite
      run: |
        set -o pipefail && xcodebuild \
          -scheme $SCHEME \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -configuration $CONFIGURATION \
          -enableCodeCoverage YES \
          test \
          | xcpretty
          
    - name: Build Archive
      run: |
        set -o pipefail && xcodebuild \
          -scheme $SCHEME \
          -configuration $CONFIGURATION \
          -destination 'generic/platform=iOS' \
          -archivePath ./PokedexPocket.xcarchive \
          archive \
          | xcpretty
          
    - name: Export IPA
      run: |
        # Create export options plist
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>development</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>thinning</key>
            <string>&lt;none&gt;</string>
        </dict>
        </plist>
        EOF
        
        xcodebuild \
          -exportArchive \
          -archivePath ./PokedexPocket.xcarchive \
          -exportPath ./Export \
          -exportOptionsPlist ExportOptions.plist
          
    - name: Create ZIP archive
      run: |
        cd Export
        zip -r PokedexPocket.zip PokedexPocket.ipa
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.release_url }}
        asset_path: ./Export/PokedexPocket.zip
        asset_name: PokedexPocket.zip
        asset_content_type: application/zip

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, build-and-upload]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.build-and-upload.result == 'success'
      run: |
        echo "üéâ Release completed successfully!"
        echo "Release URL: https://github.com/${{ github.repository }}/releases/latest"
        
    - name: Notify Failure
      if: needs.build-and-upload.result == 'failure'
      run: |
        echo "‚ùå Release failed!"
        exit 1