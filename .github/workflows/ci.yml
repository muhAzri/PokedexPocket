name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main ]

env:
  SCHEME: PokedexPocket
  CONFIGURATION: Debug
  SIMULATOR_DEVICE: iPhone 15
  SIMULATOR_OS: latest

jobs:
  test:
    name: Run Tests
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache Swift Package Manager dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData/*/SourcePackages
          .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Clean DerivedData
      run: |
        rm -rf ~/Library/Developer/Xcode/DerivedData
        
    - name: Resolve Package Dependencies
      run: |
        xcodebuild -resolvePackageDependencies -scheme $SCHEME
        
    - name: List available simulators
      run: |
        xcrun simctl list devices available
        
    - name: Run SwiftLint
      run: |
        if which swiftlint >/dev/null; then
          swiftlint --strict
        else
          echo "SwiftLint not found, installing..."
          brew install swiftlint
          swiftlint --strict
        fi
        
    - name: Build for testing
      run: |
        set -o pipefail && xcodebuild \
          -scheme $SCHEME \
          -destination 'platform=iOS Simulator,name=${{ env.SIMULATOR_DEVICE }},OS=${{ env.SIMULATOR_OS }}' \
          -configuration $CONFIGURATION \
          build-for-testing \
          | xcpretty
          
    - name: Run Unit Tests
      run: |
        set -o pipefail && xcodebuild \
          -scheme $SCHEME \
          -destination 'platform=iOS Simulator,name=${{ env.SIMULATOR_DEVICE }},OS=${{ env.SIMULATOR_OS }}' \
          -configuration $CONFIGURATION \
          test-without-building \
          -only-testing:PokedexPocketTests \
          | xcpretty --report junit --output test-results.xml
          
    - name: Run UI Tests
      run: |
        set -o pipefail && xcodebuild \
          -scheme $SCHEME \
          -destination 'platform=iOS Simulator,name=${{ env.SIMULATOR_DEVICE }},OS=${{ env.SIMULATOR_OS }}' \
          -configuration $CONFIGURATION \
          test-without-building \
          -only-testing:PokedexPocketUITests \
          | xcpretty
          
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results.xml
        
    - name: Comment test results on PR
      uses: dorny/test-reporter@v1
      if: always() && github.event_name == 'pull_request'
      with:
        name: Unit Test Results
        path: test-results.xml
        reporter: java-junit
        fail-on-error: false

  build-and-archive:
    name: Build and Archive
    runs-on: macos-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache Swift Package Manager dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData/*/SourcePackages
          .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Clean DerivedData
      run: |
        rm -rf ~/Library/Developer/Xcode/DerivedData
        
    - name: Resolve Package Dependencies
      run: |
        xcodebuild -resolvePackageDependencies -scheme $SCHEME
        
    - name: Build for Release
      run: |
        set -o pipefail && xcodebuild \
          -scheme $SCHEME \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath ./PokedexPocket.xcarchive \
          archive \
          | xcpretty
          
    - name: Upload Archive
      uses: actions/upload-artifact@v4
      with:
        name: PokedexPocket-Archive
        path: PokedexPocket.xcarchive
        retention-days: 7

  code-quality:
    name: Code Quality Analysis
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Install SwiftLint
      run: |
        if ! which swiftlint >/dev/null; then
          brew install swiftlint
        fi
        
    - name: Run SwiftLint with detailed output
      run: |
        swiftlint lint --reporter html > swiftlint-report.html || true
        swiftlint lint --reporter json > swiftlint-report.json || true
        
    - name: Upload SwiftLint reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: swiftlint-reports
        path: |
          swiftlint-report.html
          swiftlint-report.json
        
    - name: Analyze code with xcodebuild
      run: |
        set -o pipefail && xcodebuild \
          -scheme $SCHEME \
          -destination 'platform=iOS Simulator,name=${{ env.SIMULATOR_DEVICE }},OS=${{ env.SIMULATOR_OS }}' \
          -configuration $CONFIGURATION \
          analyze \
          | xcpretty