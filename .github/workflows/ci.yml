name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main ]

env:
  SCHEME: PokedexPocket
  CONFIGURATION: Debug

jobs:
  test-swift:
    name: Swift Tests
    runs-on: macos-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache SPM dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData/*/SourcePackages
          .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Install SwiftLint
      run: |
        if ! which swiftlint >/dev/null; then
          brew install swiftlint
        fi
        
    - name: Run SwiftLint
      run: |
        swiftlint lint --quiet
        
    - name: Resolve Package Dependencies
      run: |
        xcodebuild -resolvePackageDependencies -scheme $SCHEME -quiet
        
    - name: Find Available Simulator
      id: simulator
      run: |
        # Get any available iOS simulator
        SIMULATOR=$(xcrun simctl list devices available | grep -E "iPhone.*\(" | head -1)
        if [ -n "$SIMULATOR" ]; then
          DEVICE_NAME=$(echo "$SIMULATOR" | sed -E 's/^[[:space:]]*([^(]+).*/\1/' | xargs)
          echo "DEVICE_NAME=$DEVICE_NAME" >> $GITHUB_OUTPUT
          echo "✅ Found simulator: $DEVICE_NAME"
        else
          echo "DEVICE_NAME=Any iOS Simulator Device" >> $GITHUB_OUTPUT
          echo "⚠️ Using generic simulator placeholder"
        fi
        
    - name: Build and Test
      run: |
        echo "🔨 Building and testing with simulator: ${{ steps.simulator.outputs.DEVICE_NAME }}"
        set -o pipefail && xcodebuild \
          -scheme $SCHEME \
          -destination 'platform=iOS Simulator,name=${{ steps.simulator.outputs.DEVICE_NAME }}' \
          -configuration $CONFIGURATION \
          -quiet \
          test \
          -only-testing:PokedexPocketTests \
          | xcpretty
          
    - name: Test Summary
      if: always()
      run: |
        if [ $? -eq 0 ]; then
          echo "✅ All tests passed!"
        else
          echo "❌ Some tests failed"
          exit 1
        fi

  lint-only:
    name: Code Quality
    runs-on: macos-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: |
        if ! which swiftlint >/dev/null; then
          brew install swiftlint
        fi
        
    - name: Run SwiftLint (Strict)
      run: |
        echo "🔍 Running SwiftLint analysis..."
        swiftlint lint --strict
        echo "✅ Code quality check passed!"

  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [test-swift, lint-only]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: PR Status
      run: |
        echo "## 🎉 PR Checks Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Swift Tests**: Passed" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Code Quality**: Passed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All checks completed successfully! 🚀" >> $GITHUB_STEP_SUMMARY